name: Build and release plugins

on:
  push:
    paths:
      - "src/**/*.ts"
      - "index.d.ts"
      - "!package.json"
    branches:
      # We only want to create a new release when
      # - a pr is merged to main
      # - we push into main
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.FIG_BOT_TOKEN }}
      # Install all dependencies
      - name: install
        run: npm install
      # Transpile all plugins from ts to js
      - name: build
        run: npm run build
      # Zip the transpiled files into the plugins.zip file
      - name: bundle files
        run: |
          zip -r plugins.zip build/
      - name: "Automated Version Bump"
        id: "version-bump"
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.FIG_BOT_TOKEN }}
        with:
          skip-tag: "true"
      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          access: public
          token: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Checkout Cache
        uses: actions/checkout@v2
        with:
          repository: "withfig/core-backend"
          token: ${{ secrets.CACHE_SPECS_TOKEN }}
          ref: master
          path: backend
      - name: Add @latest to cache
        run: |
          cp ./plugins.zip ./backend/src/public/plugins.zip
          cd backend
          git config user.name "Build Action"
          git config user.email "noreply@fig.io"
          git add .
          TAG_VERSION=${{ steps.version-bump.outputs.newTag }}
          git commit -m "Updates plugins to $TAG_VERSION"
          git push origin master
     # Create a new github release with the newly created plugins.zip file
      - name: Release
        uses: softprops/action-gh-release@59c3b4891632ff9a897f99a91d7bc557467a3a22
        with:
          files: plugins.zip
          tag_name: ${{ steps.version-bump.outputs.newTag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
